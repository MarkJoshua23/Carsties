>choose webapi template
>remove swagger
>install nugets AutoMapper.Extensions.Microsoft.DependancyInjection, MongoDB.Entities
>Make a Model /Entity using mongodb Entity
> appsettings.json ->     "MongoDbConnection":"mongodb://root:mongopw@localhost"
> paste json seed in json file
>make a db initializer using the json to seed data to mongodb
>mongodb dont need migrations, dbcontext
>mongodb directly uses the entity/Model
>if you insert with different entity it will make new collection
>make the controller
>use pagination
>apply filters
>u can change the json fetch to synchronous request
>when assigning field like _context, _config, etc. click the lightbulb
>controllers use field assignment, the rest are scoped
==FOR SYNCRONOUS DATA PASSING BETWEEN DB==
>apply polling for requesting new content from auction service
>polling - repeating request until it succeeds
>>polling - repeating request until it succeeds => microsoft.extensions.http.polly

==FOR ASYNCRONOUS DATA PASSING BETWEEN DB==
>use a service bus/ event bus
>make a consumers that will get items in the service bus
> we will use masstransit so make names end with "Consumer"
>make automapper to map contract to mongo entity
>put masstransit t service
>include the consumer made to the masstransit sevice in program cs
>make sure to include retry mechanism in consumer in case db is down
