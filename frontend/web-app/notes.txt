>layout is the root file
>all components are default to SERVER component 
>logs in vscode is the server side logs
>'use client' to make a CLIENT component
> you should use Server Components as much as possible and only use Client Components for interactivity like state, effects, and event listeners.

====components====
>use () in map insted of {} for instant return

===server components/functions=====
>avoid async in server functions, it breaks react

====data fetching====
>.net => next js server => next js client
>this makes it the browser unaware where does the data comes from since only html is returned and no js, all requests are made in the server
>server code fetch data even before the component renders and cache it
>be careful of caching, next wont update the cached data without triggers

====images===
>next have built in image component that optimizes images
>configure next config to allow next to display image from specific url

====react-countdown====
>it calculates the countdown based on the end date provided "auctionEnd" and the current date
>if it is given fixed target date it will not restart

====css=====
>use absolute to stack a child

====types=====
> <T> are generics/placeholder not return types
> use types to have a good intellisense
> treat types as Models/Dto

====packages===
>flowbite => component library
>zustand => state management
>query-string => queries

=====UX=====
>whenever any filter or sorting criteria change,resets back the pagination to page 1

===search/page/size state flow=====
>a function will update the value of a state, 
>since the parameter state is in url variable, the url will change
>useeffect will detect the change in url
>useeffect will run getdata inside it


===auth js====
>follow documentation
>modify auth ts to import duende identity server and providers
>make sure issuer is accurate
>by default only name is available in the token
>you need to callback jwt to access profile where username is defined in identity server
>IMPORTANT!!!!! 
NextAuth only exposes session to the frontend, you need to pass username from the ID Token (profile) → NextAuth Token (token) → Session (session.user).
>auth infos like access token, username, etc can only be accessed once when logged in so it should be immediately saved to session so client can use it

===routing=====
>next is file based routing
>layout tsx is the root of each directory it has children inside which is the page tsx
>treat layout as component with OUTLET so it allows children to be rendered inside 
>page tsx is the webpage that appear when you go to that route
>meaning:
app
 ┣ child(folder)
 ┃ ┣ page.tsx      ===>  '/child'
 ┃ ┗ grandchild(folder)
 ┃   ┗ page.tsx    ===>  '/child/grandchild'
 ┗ page.tsx        ===>  '/'

>route security can be modified in middleware.ts
>then put authorized in the auth ts callbacks, so it will always redirect to login page if not auth
>to override the default login page when a route is secured make a api/auth/signin/page.tsx
 