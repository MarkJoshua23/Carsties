services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - /data/db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  auction-svc:
    image: markjoshua/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    #put overrides to appsettings/launchsettings here
    environment:
      #because it defaults to prod so modify it to dev
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #this will specify that the rabbitmq host is the rabbitmq image that is included in dockercompose
      - RabbitMq__Host=rabbitmq
      #change localhost to postgres image name
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Username=postgres;Password=postgrespw;Database=auctions
      #change localhost to IdentityService image name
      - IdentityServiceUrl=http://identity-svc
    ports:
      #exposes the 80 internal port to 7001 so u can access it to localhost:7001
      - 7001:80
      #services that this image will wait to start
    depends_on:
      - postgres
      - rabbitmq
