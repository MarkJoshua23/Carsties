services:
    postgres:
        image: postgres
        environment:
            - POSTGRES_PASSWORD=postgrespw
        ports:
            - 5432:5432
        volumes:
            - /var/lib/postgresql/data
    mongodb:
        image: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=mongopw
        ports:
            - 27017:27017
        volumes:
            - /data/db
    rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
            - 5672:5672
            - 15672:15672
    auction-svc:
        image: markjoshua/auction-svc:latest
        build:
            context: .
            dockerfile: src/AuctionService/Dockerfile
        #put overrides to appsettings/launchsettings here
        environment:
            #because it defaults to prod so modify it to dev
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ASPNETCORE_URLS=http://+:7777
            #this will specify that the rabbitmq host is the rabbitmq image that is included in dockercompose
            - RabbitMq__Host=rabbitmq
            #change localhost to postgres image name
            - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Username=postgres;Password=postgrespw;Database=auctions
            #change localhost to IdentityService image name
            - IdentityServiceUrl=http://identity-svc
            - Kestrel__Endpoints__Grpc__Protocols=Http2
            - Kestrel__Endpoints__Grpc__Url=http://+:7777
            - Kestrel__Endpoints__WebApi__Protocols=Http1
            - Kestrel__Endpoints__WebApi__Url=http://+:80
        ports:
            #exposes the 80 internal port to 7001 so u can access it to localhost:7001
            - 7001:80
            - 7777:7777
            #services that this image will wait to start
        depends_on:
            - postgres
            - rabbitmq
    search-svc:
        image: markjoshua/search-svc:latest
        build:
            context: .
            dockerfile: src/SearchService/Dockerfile
        #put overrides to appsettings/launchsettings here
        environment:
            #because it defaults to prod so modify it to dev
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            #this will specify that the rabbitmq host is the rabbitmq image that is included in dockercompose
            - RabbitMq__Host=rabbitmq
            #change localhost to mongodb image name
            - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
            #change localhost to AuctionService image name
            - AuctionServiceUrl=http://auction-svc
        ports:
            #exposes the 80 internal port to 7002 so u can access it to localhost:7001
            - 7002:80
            #services that this image will wait to start
        depends_on:
            - mongodb
            - rabbitmq
    identity-svc:
        image: markjoshua/identity-svc:latest
        build:
            context: .
            dockerfile: src/IdentityService/Dockerfile
        #put overrides to appsettings/launchsettings here
        environment:
            #because it defaults to prod so modify it to dev
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
            - IssuerUri=http://id.carsties.local
            - ClientApp=http://app.carsties.local
            #change localhost to mongodb image name
            - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Username=postgres;Password=postgrespw;Database=identity
            - VIRTUAL_HOST=id.carsties.local

        ports:
            #exposes the 80 internal port to 7002 so u can access it to localhost:7001
            - 5000:80
            #services that this image will wait to start
        depends_on:
            - postgres
    gateway-svc:
        image: markjoshua/gateway-svc:latest
        build:
            context: .
            dockerfile: src/GatewayService/Dockerfile
        #put overrides to appsettings/launchsettings here
        environment:
            #it defaults to prod so modify it to appsettings.Docker.json
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
            - ClientApp=http://app.carsties.local
            - VIRTUAL_HOST=api.carsties.local
    bid-svc:
        image: markjoshua/bid-svc:latest
        build:
            context: .
            dockerfile: src/BiddingService/Dockerfile
        #put overrides to appsettings/launchsettings here
        environment:
            #because it defaults to prod so modify it to dev
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            #this will specify that the rabbitmq host is the rabbitmq image that is included in dockercompose
            - RabbitMq__Host=rabbitmq
            #change localhost to mongodb image name
            #use double underscore in exchange of indent '__'
            - ConnectionStrings__BidBdConnection=mongodb://root:mongopw@mongodb
            #change localhost to AuctionService image name
            #change localhost to IdentityService image name
            - IdentityServiceUrl=http://identity-svc
            - GrpcAuction=http://auction-svc:7777
        ports:
            #exposes the 80 internal port to 7002 so u can access it to localhost:7001
            - 7003:80
            #services that this image will wait to start
        depends_on:
            - mongodb
            - rabbitmq
    notify-svc:
        image: markjoshua/notify-svc:latest
        build:
            context: .
            dockerfile: src/NotificationService/Dockerfile
        #put overrides to appsettings/launchsettings here
        environment:
            #because it defaults to prod so modify it to dev
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            #this will specify that the rabbitmq host is the rabbitmq image that is included in dockercompose
            - RabbitMq__Host=rabbitmq
        ports:
            #exposes the 80 internal port to 7002 so u can access it to localhost:7001
            - 7004:80
            #services that this image will wait to start
        depends_on:
            - rabbitmq
    web-app:
        image: markjoshua/web-app
        build:
            context: .
            dockerfile: frontend/web-app/Dockerfile
        #this is for caching
        volumes:
            - /var/lib/web/data
        #ports are now unnecessary in nginx proxy
        # ports:
        #     - 3000:3000
        environment:
            #copy the env in env.local
            - AUTH_SECRET="soGGsiaRLtcewWt5lpGpSZXJ2Xtj2UZGqcBRsdiHUGE=" # Added by `npx auth`. Read more: https://cli.authjs.dev
            #just the image name since were in docker
            - API_URL=http://gateway-svc/
            #this will be used for browser
            - ID_URL=http://id.carsties.local
            #used for docker networjing
            - ID_URL_INTERNAL=http://identity-svc
            #it stays since the browser is the one accessing
            - NOTIFY_URL=http://api.carsties.local/notifications
            - AUTH_URL=http://app.carsties.local
            - AUTH_URL_INTERNAL=http://web-app:3000
            - AUTH_TRUST_HOST=true
            #part of nginx proxy this will be the xposed url
            - VIRTUAL_HOST=app.carsties.local
            - VIRTUAL_PORT=3000
    #this is from the documentation
    nginx-proxy:
        image: nginxproxy/nginx-proxy
        container_name: nginx-proxy
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
